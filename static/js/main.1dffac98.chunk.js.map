{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todos","onClick","className","map","todo","id","completed","classNames","title","type","TodoFilter","status","query","onChangeStatus","onChangeQuery","onChangeApplyQuery","value","onChange","e","target","placeholder","trimStart","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","closeModal","useState","user","setUser","getUserFromServer","a","result","alert","useEffect","href","email","name","App","setTodos","setStatus","setQuery","applyedQuery","setApplyedQuery","isLoading","setIsLoading","setTodo","getTodosFromServer","applyQuery","useCallback","fn","timerId","clearTimeout","args","debounce","visibleTodos","useMemo","filteredByQuery","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dffac98.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onClick: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({ todos, onClick }) => {\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map((todo) => (\n            <tr\n              data-cy=\"todo\"\n              className=\"\"\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","type Props = {\n  status: string,\n  query: string,\n  onChangeStatus: (value: string) => void,\n  onChangeQuery: (value: string) => void,\n  onChangeApplyQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  status,\n  query,\n  onChangeStatus,\n  onChangeQuery,\n  onChangeApplyQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={status}\n          onChange={(e) => onChangeStatus(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => {\n          const value = e.target.value.trimStart();\n\n          onChangeQuery(value);\n          onChangeApplyQuery(value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onChangeQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  closeModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n\n  const getUserFromServer = async () => {\n    try {\n      const result = await getUser(userId);\n\n      setUser(result);\n    } catch (error: unknown) {\n      // eslint-disable-next-line no-alert\n      alert('User not found');\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(!user) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useState, useEffect, useMemo, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nconst debounce = (\n  fn: React.Dispatch<React.SetStateAction<string>>,\n  delay: number,\n) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(fn, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [status, setStatus] = useState('all');\n  const [query, setQuery] = useState('');\n  const [applyedQuery, setApplyedQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [todo, setTodo] = useState<null | Todo>(null);\n\n  const getTodosFromServer = async () => {\n    try {\n      setIsLoading(true);\n      const result = await getTodos();\n\n      setTodos(result);\n    } catch (error: unknown) {\n      // eslint-disable-next-line no-alert\n      alert(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce(setApplyedQuery, 500),\n    [],\n  );\n\n  const getSortedTodos = () => {\n    const filteredByQuery = todos.filter(({ title }) => (\n      title.toLowerCase().includes(applyedQuery.toLowerCase())\n    ));\n\n    switch (status) {\n      case 'active':\n        return filteredByQuery.filter(({ completed }) => !completed);\n\n      case 'completed':\n        return filteredByQuery.filter(({ completed }) => completed);\n\n      default:\n        return filteredByQuery;\n    }\n  };\n\n  const closeModal = () => setTodo(null);\n\n  const visibleTodos = useMemo(\n    getSortedTodos,\n    [todos, status, applyedQuery],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                query={query}\n                onChangeStatus={setStatus}\n                onChangeQuery={setQuery}\n                onChangeApplyQuery={applyQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    onClick={setTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {todo && (\n        <TodoModal\n          closeModal={closeModal}\n          todo={todo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}